[user]
  name = Lukasz Balamut
  email = lukasz.balamut@nokia.com

[color]
  diff = auto
  status = auto
  branch = auto

[core]
  editor = mvim
  excludesfile = /Users/balamut/.gitignore

[push]
  default = simple

[svn]
  rmdir = true
  authorsprog = /Users/balamut/scripts/git-svn-authors.sh

[diff]
  tool = mvimdiff3

[difftool "mvimdiff3"]
  prompt = no
  cmd = mvim -f -n -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"

[merge]
  conflictstyle = diff3
  tool = mvimdiff3

[mergetool "mvimdiff3"]
  cmd = mvim -f -n -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"

[github]
  user = lbalamut

[http]
# proxy = %HTTP_PROXY%

[alias]
  b = branch
  st = status
  d = diff
  ci = commit --verbose
  cA = commit --verbose --amend --reuse-message=HEAD
  co = checkout
  cp = cherry-pick
  lg  = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative
  lg1 = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative
#  lgBranch1 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
#  lgBranch2 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
#  lg1 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
#  lg2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit

#   lg = !"git lg1"
  sm = submodule
  sub = submodule update --init --recursive
  pr = pull --rebase
  staged = diff --cached
  unstaged = diff
  both = diff HEAD
  vdiff = difftool -y
  vmerge = mergetool -y
  mergeSt = ls-files -u

  lost = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"
  heads = !"git log origin/master.. --format='%Cred%h%Creset;%C(yellow)%an%Creset;%H;%Cblue%f%Creset' | git name-rev --stdin --always --name-only | column -t -s';'"
  commitStat = shortlog -sne --since 2013-01-01
